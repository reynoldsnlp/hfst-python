#!/usr/bin/env python3
"""
To use this script as a local post-commit check...
    1) Symlink (or copy) this file to .git/hooks/
    2) Ensure that it is executable (chmod +x .git/hooks/post-commit).
"""

import re
import subprocess
import sys
import warnings

sys.stdin = open('/dev/tty')

print(f'Running {__file__}...', file=sys.stderr)

with open('VERSION') as f:
    file_version = f.read().strip()

log = subprocess.run(['git', 'log', '-1', '-p'],
                     stdout=subprocess.PIPE,
                     universal_newlines=True).stdout

diff = '\ndiff --git a/VERSION ' in log
if diff:
    version_diff = re.search(r'^(diff --git a/VERSION .*?)(?:\Z|^diff --git a/)',
                             log, re.S | re.M).group(1)
    log_version = re.search(r'^\+\s*([0-9.b]+)\s*$',
                            version_diff, re.M).group(1)
    if log_version != file_version:
        warnings.warn('VERSION has been changed since the latest commit.')
    if 'b' not in log_version:
        response = input(f'This commit changed the version to {log_version}. '
                         'Would you like to tag this commit to '
                         'trigger a release on PyPI? This should only be '
                         'done if this has already been successfully built '
                         'and deployed on test.pypi.org (y/N) > ')
        if response in {'Y', 'y'}:
            completed = subprocess.run(['git', 'tag', f'v{log_version}'])
            sys.exit(completed.returncode)
