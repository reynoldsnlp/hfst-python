name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    environment: Build
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"
          CIBW_SKIP: cp27-* cp35-* pp27-*

          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux2010  # 2014 unavailable
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PPC64LE_IMAGE: manylinux2014
          CIBW_MANYLINUX_S390X_IMAGE: manylinux2014
          # CIBW_BEFORE_ALL:  echo "This is the main CIBW_BEFORE_ALL"
          CIBW_BEFORE_ALL_LINUX:   bash scripts/cibw_before_all_linux.sh

          CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=10.9"
          CIBW_BEFORE_ALL_MACOS:   bash scripts/cibw_before_all_macos.sh

          CIBW_BEFORE_ALL_WINDOWS: C:\msys64\msys2_shell.cmd -mingw64 -defterm -here -full-path -no-start -shell bash scripts/cibw_before_all_windows.sh

          CIBW_TEST_COMMAND: "pushd test && ./test.sh --python $(which python) --verbose ; popd"
      # TODO test sdist by trying to build from it

      - uses: actions/upload-artifact@v2
        with:
          path: |
                  ./wheelhouse/*.whl
                  ./dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ./wheelhouse/

      - name: Publish distribution ðŸ“¦ to Test PyPI
        # upload to Test PyPI on every tag NOT starting with 'v'
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') != true
        # alternatively, to publish when a GitHub Release is not created, use the following rule:
        # if: github.event_name != 'release' || github.event.action != 'published'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          packages_dir: ./wheelhouse/
          repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution ðŸ“¦ to PyPI
        # upload to PyPI on every tag starting with 'v'
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        # alternatively, to publish when a GitHub Release is created, use the following rule:
        # if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: ./wheelhouse/
