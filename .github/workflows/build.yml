name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    environment: Build
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.3.1  # see pyproject.toml for config

      - uses: actions/upload-artifact@v2
        with:
          path: |
                  ./wheelhouse/*.whl
                  ./*.tar.gz

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: artifact
          path: dist

      - name: Show artifact directory structure
        run: find ${{ steps.download.outputs.download-path }}

      - name: Publish distribution ðŸ“¦ to Test PyPI
        # upload to Test PyPI on every tag NOT starting with 'v'
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') != true
        # alternatively, to publish when a GitHub Release is not created, use the following rule:
        # if: github.event_name != 'release' || github.event.action != 'published'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: dist/wheelhouse/
          verbose: true

      - name: Publish distribution ðŸ“¦ to PyPI
        # upload to PyPI on every tag starting with 'v'
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        # alternatively, to publish when a GitHub Release is created, use the following rule:
        # if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: dist/wheelhouse/
          verbose: true
